#include <Arduino.h>

#include <SoftwareSerial.h>
SoftwareSerial mySerial(5, 6);

#include <../lib/Talkie/src/Talkie.h>
#include <../lib/Talkie/src/Vocab_US_Large.h>
#include <../lib/Talkie/src/Vocab_US_Acorn.h>
#include <../lib/Talkie/src/voice.h>
Talkie voice;

#include <Bounce2.h>
#define PIN_BUTTON_A1 A1
#define PIN_BUTTON_A2 A2
#define PIN_BUTTON_A3 A3
Bounce debouncer_a1 = Bounce();
Bounce debouncer_a2 = Bounce();
Bounce debouncer_a3 = Bounce();

//             ABCDEFG DP
#define CH_0 0b00000011
#define CH_1 0b10011111
#define CH_2 0b00100101
#define CH_3 0b00001101
#define CH_4 0b10011001
#define CH_5 0b01001001
#define CH_6 0b01000001
#define CH_7 0b00011111
#define CH_8 0b00000001
#define CH_9 0b00001001

#define CH_A 0b10011111
#define CH_B 0b10011111
#define CH_C 0b10011111
#define CH_D 0b10011111
#define CH_E 0b10011111
#define CH_F 0b10011111

#define CH_P 0b00110001
#define CH_N 0b11010101

#define CH_UP 0b01111111
#define CH_DOWN 0b11101111
#define CH_LEFT 0b11110011
#define CH_OFF 0b11111111

byte number_array[] = {CH_0, CH_1, CH_2, CH_3, CH_4, CH_5, CH_6, CH_7, CH_8, CH_9};

int latchPin = 4;
int clockPin = 7;
int dataPin = 8;
byte leds = 0;


const int maxLength = 5000;
String master_string = "";
String master_string_1 = "";
String master_string_2 = "1000 - 120 - 100 - 120 - 100 - 1200 - 100 - 150 - 100 - 150 - 100 - 290 - 100 - 1190 - 100 - 750 - 100 - 1190 - 100 - 370 - 100 - 370 - 100 - 130 - 100 - 130 - 100 - 1360 - 100 - 670 - 100 - 1610 - 100 - 1780 - 100 - 1530 - 100 - 1780 - 100 - 1780 - 100 - 1780 - 100 - 110 - 100 - 1530 - 100 - 110 - 100 - 1780 - 100 - 440 - 100 - 2000 - 100 - 1360 - 100 - 2010 - 100 - 1600 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 110 - 100 - 660 - 100 - 110 - 100 - 110 - 100 - 370 - 100 - 370 - 100 - 70 - 100 - 70 - 100 - 70 - 100 - 70 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 1330 - 100 - 1350 - 100 - 1340 - 100 - 1350 - 100 - 130 - 100 - 370 - 100 - 370 - 100 - 1190 - 100 - 1190 - 100 - 120 - 100 - 370 - 100 - 110 - 100 - 110 - 100 - 1490 - 100 - 110 - 100 - 370 - 100 - 370 - 100 - 1340 - 100 - 660 - 100 - 1330 - 100 - 110 - 100 - 110 - 100 - 440 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 120 - 100 - 120 - 100 - 590 - 100 - 1200 - 100 - 560 - 100 - 290 - 100 - 560 - 100 - 1200 - 100 - 560 - 100 - 300 - 100 - 150 - 100 - 140 - 100 - 150 - 100 - 150 - 100 - 660 - 100 - 1530 - 100 - 1780 - 100 - 1780 - 100 - 1780 - 100 - 1800 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 880 - 100 - 880 - 100 - 800 - 100 - 1330 - 100 - 1360 - 100 - 220 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 370 - 100 - 220 - 100 - 220 - 100 - 1350 - 100 - 440 - 100 - 110 - 100 - 170 - 100 - 130 - 100 - 590 - 100 - 130 - 100 - 220 - 100 - 70 - 100 - 150 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 660 - 100 - 660 - 100 - 660 - 100 - 1350 - 100 - 130 - 100 - 750 - 100 - 150 - 100 - 150 - 100 - 130 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 160 - 100 - 590 - 100 - 590 - 100 - 130 - 100 - 150 - 100 - 150 - 100 - 370 - 100 - 590 - 100 - 590 - 100 - 150 - 100 - 590 - 100 - 150 - 100 - 170 - 100 - 110 - 100 - 1330 - 100 - 330 - 100 - 330 - 100 - 1330 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 440 - 100 - 670 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 150 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 1480 - 100 - 1480 - 100 - 1340 - 100 - 1600 - 100 - 110 - 100 - 220 - 100 - 450 - 100 - 110 - 100 - 110 - 100 - 130 - 100 - 1180 - 100 - 370 - 100 - 170 - 100 - 150 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1480 - 100 - 1480 - 100 - 1350 - 100 - 220 - 100 - 110 - 100 - 120 - 100 - 230 - 100 - 380 - 100 - 380 - 100 - 370 - 100 - 370 - 100 - 190 - 100 - 370 - 100 - 1350 - 100 - 130 - 100 - 250 - 100 - 250 - 100 - 300 - 100 - 500 - 100 - 130 - 100 - 660 - 100 - 660 - 100 - 330 - 100 - 330 - 100 - 440 - 100 - 220 - 100 - 220 - 100 - 450 - 100 - 110 - 100 - 110 - 100 - 1510 - 100 - 600 - 100 - 110 - 100 - 1490 - 100 - 120 - 100 - 300 - 100 - 1800 - 100 - 1480 - 100 - 150 - 100 - 1520 - 100 - 750 - 100 - 1490 - 100 - 1490 - 100 - 130 - 100 - 1620 - 100 - 150 - 100 - 790 - 100 - 150 - 100 - 150 - 100 - 750 - 100 - 1530 - 100 - 750 - 100 - 440 - 100 - 110 - 100 - 1540 - 100 - 450 - 100 - 440 - 100 - 890 - 100 - 1610 - 100 - 1360 - 100 - 790 - 100 - 220 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 750 - 100 - 370 - 100 - 110 - 100 - 1350 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 130 - 100 - 110 - 100 - 590 - 100 - 590 - 100 - 70 - 100 - 150 - 100 - 150 - 100 - 370 - 100 - 1780 - 100 - 560 - 100 - 1330 - 100 - 660 - 100 - 660 - 100 - 1340 - 100 - 1330 - 100 - 130 - 100 - 370 - 100 - 370 - 100 - 150 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 330 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 110 - 100 - 110 - 100 - 590 - 100 - 130 - 100 - 370 - 100 - 150 - 100 - 150 - 100 - 750 - 100 - 1810 - 100 - 1610 - 100 - 660 - 100 - 1610 - 100 - 750 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 130 - 100 - 380 - 100 - 370 - 100 - 370 - 100 - 600 - 100 - 1340 - 100 - 1330 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 750 - 100 - 1490 - 100 - 1340 - 100 - 110 - 100 - 1610 - 100 - 750 - 100 - 110 - 100 - 750 - 100 - 110 - 100 - 110 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 1340 - 100 - 110 - 100 - 110 - 100 - 1370 - 100 - 110 - 100 - 1510 - 100 - 750 - 100 - 750 - 100 - 800 - 100 - 110 - 100 - 120 - 100 - 370 - 100 - 1500 - 100 - 1500 - 100 - 370 - 100 - 1340 - 100 - 370 - 100 - 1340 - 100 - 100 - 100 - 120 - 100 - 500 - 100 - 130 - 100 - 130 - 100 - 130 - 100 - 170 - 100 - 1330 - 100 - 1250 - 100 - 220 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 370 - 100 - 130 - 100 - 600 - 100 - 130 - 100 - 220 - 100 - 290 - 100 - 150 - 100 - 750 - 100 - 750 - 100 - 370 - 100 - 370 - 100 - 130 - 100 - 1340 - 100 - 1340 - 100 - 150 - 100 - 150 - 100 - 750 - 100 - 1530 - 100 - 750 - 100 - 1780 - 100 - 290 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1530 - 100 - 1530 - 100 - 1530 - 100 - 1360 - 100 - 1600 - 100 - 800 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 750 - 100 - 1340 - 100 - 110 - 100 - 1340 - 100 - 450 - 100 - 110 - 100 - 160 - 100 - 150 - 100 - 370 - 100 - 150 - 100 - 220 - 100 - 220 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 1360 - 100 - 670 - 100 - 660 - 100 - 660 - 100 - 440 - 100 - 1500 - 100 - 750 - 100 - 1480 - 100 - 1190 - 100 - 750 - 100 - 1340 - 100 - 670 - 100 - 670 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 600 - 100 - 1190 - 100 - 370 - 100 - 370 - 100 - 590 - 100 - 1190 - 100 - 1190 - 100 - 440 - 100 - 110 - 100 - 110 - 100 - 440 - 100 - 450 - 100 - 440 - 100 - 440 - 100 - 390 - 100 - 390 - 100 - 400 - 100 - 390 - 100 - 390 - 100 - 390 - 100 - 380 - 100 - 380 - 100 - 130 - 100 - 380 - 100 - 380 - 100 - 140 - 100 - 150 - 100 - 590 - 100 - 150 - 100 - 600 - 100 - 600 - 100 - 590 - 100 - 150 - 100 - 130 - 100 - 530 - 100 - 150 - 100 - 520 - 100 - 260 - 100 - 260 - 100 - 260 - 100 - 130 - 100 - 250 - 100 - 500 - 100 - 130 - 100 - 130 - 100 - 250 - 100 - 150 - 100 - 200 - 100 - 400 - 100 - 400 - 100 - 670 - 100 - 330 - 100 - 110 - 100 - 330 - 100 - 110 - 100 - 660 - 100 - 280 - 100 - 330 - 100 - 330 - 100 - 560 - 100 - 560 - 100 - 110 - 100 - 500 - 100 - 330 - 100 - 440 - 100 - 440 - 100 - 500 - 100 - 110 - 100 - 160 - 100 - 280 - 100 - 140 - 100 - 290 - 100 - 160 - 100 - 370 - 100 - 380 - 100 - 370 - 100 - 150 - 100 - 330 - 100 - 160 - 100 - 330 - 100 - 110 - 100 - 110 - 100 - 560 - 100 - 110 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 150 - 100 - 600 - 100 - 590 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 300 - 100 - ";
String master_string_3 = "500 - 0 - 100 - 120 - 100 - 120 - 100 - 1200 - 100 - 150 - 100 - 150 - 100 - 290 - 100 - 1190 - 100 - 750 - 100 - 1190 - 100 - 370 - 100 - 370 - 100 - 130 - 100 - 130 - 100 - 1360 - 100 - 670 - 100 - 1610 - 100 - 1780 - 100 - 1530 - 100 - 1780 - 100 - 1780 - 100 - 1780 - 100 - 110 - 100 - 1530 - 100 - 110 - 100 - 1780 - 100 - 440 - 100 - 2000 - 100 - 1360 - 100 - 2010 - 100 - 1600 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 110 - 100 - 660 - 100 - 110 - 100 - 110 - 100 - 370 - 100 - 370 - 100 - 70 - 100 - 70 - 100 - 70 - 100 - 70 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 1330 - 100 - 1350 - 100 - 1340 - 100 - 1350 - 100 - 130 - 100 - 370 - 100 - 370 - 100 - 1190 - 100 - 1190 - 100 - 120 - 100 - 370 - 100 - 110 - 100 - 110 - 100 - 1490 - 100 - 110 - 100 - 370 - 100 - 370 - 100 - 1340 - 100 - 660 - 100 - 1330 - 100 - 110 - 100 - 110 - 100 - 440 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 120 - 100 - 120 - 100 - 590 - 100 - 1200 - 100 - 560 - 100 - 290 - 100 - 560 - 100 - 1200 - 100 - 560 - 100 - 300 - 100 - 150 - 100 - 140 - 100 - 150 - 100 - 150 - 100 - 660 - 100 - 1530 - 100 - 1780 - 100 - 1780 - 100 - 1780 - 100 - 1800 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 880 - 100 - 880 - 100 - 800 - 100 - 1330 - 100 - 1360 - 100 - 220 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 370 - 100 - 220 - 100 - 220 - 100 - 1350 - 100 - 440 - 100 - 110 - 100 - 170 - 100 - 130 - 100 - 590 - 100 - 130 - 100 - 220 - 100 - 70 - 100 - 150 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 660 - 100 - 660 - 100 - 660 - 100 - 1350 - 100 - 130 - 100 - 750 - 100 - 150 - 100 - 150 - 100 - 130 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 160 - 100 - 590 - 100 - 590 - 100 - 130 - 100 - 150 - 100 - 150 - 100 - 370 - 100 - 590 - 100 - 590 - 100 - 150 - 100 - 590 - 100 - 150 - 100 - 170 - 100 - 110 - 100 - 1330 - 100 - 330 - 100 - 330 - 100 - 1330 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 440 - 100 - 670 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 150 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 1480 - 100 - 1480 - 100 - 1340 - 100 - 1600 - 100 - 110 - 100 - 220 - 100 - 450 - 100 - 110 - 100 - 110 - 100 - 130 - 100 - 1180 - 100 - 370 - 100 - 170 - 100 - 150 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1480 - 100 - 1480 - 100 - 1350 - 100 - 220 - 100 - 110 - 100 - 120 - 100 - 230 - 100 - 380 - 100 - 380 - 100 - 370 - 100 - 370 - 100 - 190 - 100 - 370 - 100 - 1350 - 100 - 130 - 100 - 250 - 100 - 250 - 100 - 300 - 100 - 500 - 100 - 130 - 100 - 660 - 100 - 660 - 100 - 330 - 100 - 330 - 100 - 440 - 100 - 220 - 100 - 220 - 100 - 450 - 100 - 110 - 100 - 110 - 100 - 1510 - 100 - 600 - 100 - 110 - 100 - 1490 - 100 - 120 - 100 - 300 - 100 - 1800 - 100 - 1480 - 100 - 150 - 100 - 1520 - 100 - 750 - 100 - 1490 - 100 - 1490 - 100 - 130 - 100 - 1620 - 100 - 150 - 100 - 790 - 100 - 150 - 100 - 150 - 100 - 750 - 100 - 1530 - 100 - 750 - 100 - 440 - 100 - 110 - 100 - 1540 - 100 - 450 - 100 - 440 - 100 - 890 - 100 - 1610 - 100 - 1360 - 100 - 790 - 100 - 220 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 750 - 100 - 370 - 100 - 110 - 100 - 1350 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 130 - 100 - 110 - 100 - 590 - 100 - 590 - 100 - 70 - 100 - 150 - 100 - 150 - 100 - 370 - 100 - 1780 - 100 - 560 - 100 - 1330 - 100 - 660 - 100 - 660 - 100 - 1340 - 100 - 1330 - 100 - 130 - 100 - 370 - 100 - 370 - 100 - 150 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 330 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 110 - 100 - 110 - 100 - 590 - 100 - 130 - 100 - 370 - 100 - 150 - 100 - 150 - 100 - 750 - 100 - 1810 - 100 - 1610 - 100 - 660 - 100 - 1610 - 100 - 750 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1340 - 100 - 1340 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 130 - 100 - 380 - 100 - 370 - 100 - 370 - 100 - 600 - 100 - 1340 - 100 - 1330 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 750 - 100 - 1490 - 100 - 1340 - 100 - 110 - 100 - 1610 - 100 - 750 - 100 - 110 - 100 - 750 - 100 - 110 - 100 - 110 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 1340 - 100 - 110 - 100 - 110 - 100 - 1370 - 100 - 110 - 100 - 1510 - 100 - 750 - 100 - 750 - 100 - 800 - 100 - 110 - 100 - 120 - 100 - 370 - 100 - 1500 - 100 - 1500 - 100 - 370 - 100 - 1340 - 100 - 370 - 100 - 1340 - 100 - 100 - 100 - 120 - 100 - 500 - 100 - 130 - 100 - 130 - 100 - 130 - 100 - 170 - 100 - 1330 - 100 - 1250 - 100 - 220 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 370 - 100 - 130 - 100 - 600 - 100 - 130 - 100 - 220 - 100 - 290 - 100 - 150 - 100 - 750 - 100 - 750 - 100 - 370 - 100 - 370 - 100 - 130 - 100 - 1340 - 100 - 1340 - 100 - 150 - 100 - 150 - 100 - 750 - 100 - 1530 - 100 - 750 - 100 - 1780 - 100 - 290 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 1530 - 100 - 1530 - 100 - 1530 - 100 - 1360 - 100 - 1600 - 100 - 800 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 750 - 100 - 1340 - 100 - 110 - 100 - 1340 - 100 - 450 - 100 - 110 - 100 - 160 - 100 - 150 - 100 - 370 - 100 - 150 - 100 - 220 - 100 - 220 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 1360 - 100 - 670 - 100 - 660 - 100 - 660 - 100 - 440 - 100 - 1500 - 100 - 750 - 100 - 1480 - 100 - 1190 - 100 - 750 - 100 - 1340 - 100 - 670 - 100 - 670 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 110 - 100 - 600 - 100 - 1190 - 100 - 370 - 100 - 370 - 100 - 590 - 100 - 1190 - 100 - 1190 - 100 - 440 - 100 - 110 - 100 - 110 - 100 - 440 - 100 - 450 - 100 - 440 - 100 - 440 - 100 - 390 - 100 - 390 - 100 - 400 - 100 - 390 - 100 - 390 - 100 - 390 - 100 - 380 - 100 - 380 - 100 - 130 - 100 - 380 - 100 - 380 - 100 - 140 - 100 - 150 - 100 - 590 - 100 - 150 - 100 - 600 - 100 - 600 - 100 - 590 - 100 - 150 - 100 - 130 - 100 - 530 - 100 - 150 - 100 - 520 - 100 - 260 - 100 - 260 - 100 - 260 - 100 - 130 - 100 - 250 - 100 - 500 - 100 - 130 - 100 - 130 - 100 - 250 - 100 - 150 - 100 - 200 - 100 - 400 - 100 - 400 - 100 - 670 - 100 - 330 - 100 - 110 - 100 - 330 - 100 - 110 - 100 - 660 - 100 - 280 - 100 - 330 - 100 - 330 - 100 - 560 - 100 - 560 - 100 - 110 - 100 - 500 - 100 - 330 - 100 - 440 - 100 - 440 - 100 - 500 - 100 - 110 - 100 - 160 - 100 - 280 - 100 - 140 - 100 - 290 - 100 - 160 - 100 - 370 - 100 - 380 - 100 - 370 - 100 - 150 - 100 - 330 - 100 - 160 - 100 - 330 - 100 - 110 - 100 - 110 - 100 - 560 - 100 - 110 - 100 - 590 - 100 - 590 - 100 - 590 - 100 - 150 - 100 - 600 - 100 - 590 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 150 - 100 - 300 - 100";
float bpm;
int frequencies[maxLength];
int volumes[maxLength];
uint64_t last_tick;
int i = 1105;

String say_string = "00Enter the correct answer";
bool transcribe;
bool is_female;

byte display_table[] = {CH_1, CH_2, CH_3, CH_P}; 

void updateShiftRegister();

uint8_t beg_c = 0;
void beg(){
  if(beg_c == 0){
    display_table[0] = CH_OFF;
    display_table[1] = CH_OFF;
    display_table[2] = CH_OFF;
    display_table[3] = CH_UP;
  }
  if(beg_c == 1){
    display_table[0] = CH_OFF;
    display_table[1] = CH_OFF;
    display_table[2] = CH_OFF;
    display_table[3] = CH_1;
  }
  if(beg_c == 2){
    display_table[0] = CH_OFF;
    display_table[1] = CH_OFF;
    display_table[2] = CH_OFF;
    display_table[3] = CH_DOWN;
  }
  if(beg_c == 3){
    display_table[0] = CH_OFF;
    display_table[1] = CH_OFF;
    display_table[2] = CH_DOWN;
    display_table[3] = CH_OFF;
  }
  if(beg_c == 4){
    display_table[0] = CH_OFF;
    display_table[1] = CH_DOWN;
    display_table[2] = CH_OFF;
    display_table[3] = CH_OFF;
  }
  if(beg_c == 5){
    display_table[0] = CH_LEFT;
    display_table[1] = CH_OFF;
    display_table[2] = CH_OFF;
    display_table[3] = CH_OFF;
  }
  if(beg_c == 6){
    display_table[0] = CH_UP;
    display_table[1] = CH_OFF;
    display_table[2] = CH_OFF;
    display_table[3] = CH_OFF;
  }
  if(beg_c == 7){
    display_table[0] = CH_OFF;
    display_table[1] = CH_UP;
    display_table[2] = CH_OFF;
    display_table[3] = CH_OFF;
  }
  if(beg_c == 8){
    display_table[0] = CH_OFF;
    display_table[1] = CH_OFF;
    display_table[2] = CH_UP;
    display_table[3] = CH_OFF;
  }
  beg_c++;
  if(beg_c > 8){
    beg_c = 0;
  }
}

void display_chars(byte input[]){
    leds = input[0];
    updateShiftRegister();
    leds = 0b10000000;
    updateShiftRegister();
    delay(2);
    leds = input[1];
    updateShiftRegister();
    leds = 0b01000000;
    updateShiftRegister();
    delay(2);
    leds = input[2];
    updateShiftRegister();
    leds = 0b00100000;
    updateShiftRegister();
    delay(2);
    leds = input[3];
    updateShiftRegister();
    leds = 0b00010000;
    updateShiftRegister();
    delay(2);
}

void updateShiftRegister()
{
   digitalWrite(latchPin, LOW);
   shiftOut(dataPin, clockPin, LSBFIRST, leds);
   digitalWrite(latchPin, HIGH);
}

void play_song(){
      // Выводим полученные данные
  display_table[0] = CH_5;
  display_table[1] = CH_0;
  display_table[2] = CH_N;
  display_table[3] = CH_6;
  mySerial.print("BPM: ");
  mySerial.println(bpm);
  mySerial.println("Frequencies and volumes:");
  for (int j = 0; j < i; j++) {
    display_chars(display_table);
    mySerial.print("Frequency: ");
    mySerial.print(frequencies[j]);
    mySerial.print(" Volume: ");
    mySerial.println(volumes[j]);
    mySerial.print(" Iteration: ");
    mySerial.println(j);
    last_tick = millis();
    while(last_tick + ((60/bpm)*1000) > millis()){
      display_chars(display_table);
      tone(3, frequencies[j], 100);
    }
  }
}

void prepare_song(){
  mySerial.print("HELLO");
  char str[maxLength];
  master_string.toCharArray(str, maxLength);
  
  // Получаем первое значение (bpm)
  char *token = strtok(str, "-");
  if (token != NULL) {
    bpm = atoi(token);
  }

  // Получаем остальные значения (частоты и громкости)
  i = 0;
  while (token != NULL) {
    token = strtok(NULL, "-");
    if (token != NULL) {
      // Чередующиеся частоты и громкости сохраняются в соответствующих массивах
      frequencies[i] = atoi(token);
      token = strtok(NULL, "-");
      volumes[i] = atoi(token);
      i++;
    }
  }

}

void setup() 
{
  // Set all the pins of 74HC595 as OUTPUT
  pinMode(latchPin, OUTPUT);
  pinMode(dataPin, OUTPUT);  
  pinMode(clockPin, OUTPUT);
  Serial.begin(9600);
  mySerial.begin(9600);

  pinMode(PIN_BUTTON_A1, INPUT_PULLUP);
  pinMode(PIN_BUTTON_A2, INPUT_PULLUP);
  pinMode(PIN_BUTTON_A3, INPUT_PULLUP);
  debouncer_a1.attach(PIN_BUTTON_A1);
  debouncer_a1.interval(5);
  debouncer_a2.attach(PIN_BUTTON_A2);
  debouncer_a2.interval(5);
  debouncer_a3.attach(PIN_BUTTON_A3);
  debouncer_a3.interval(5);

    voice.doNotUseInvertedOutput();
}

int incomingByte = 0;
uint64_t beg_millis = 0;
uint8_t number_song = 0;
void loop() 
{
  if(analogRead(A1) == 0){
    delay(100);
    number_song--;
    if(number_song < 0){
      number_song = 0;
    }
  }
  if(number_song == 1){
    display_table[0] = CH_5;
    display_table[1] = CH_0;
    display_table[2] = CH_N;
    display_table[3] = CH_1;
  }
  if(number_song == 2){
    display_table[0] = CH_5;
    display_table[1] = CH_0;
    display_table[2] = CH_N;
    display_table[3] = CH_2;
  }
  if(number_song == 3){
    display_table[0] = CH_5;
    display_table[1] = CH_0;
    display_table[2] = CH_N;
    display_table[3] = CH_3;
  }

  display_chars(display_table);
  
  if(beg_millis + 100 < millis()){
    if(number_song == 0){
      beg();
    } 
    beg_millis = millis();
  }
  
  if (mySerial.available() > 0) {
    incomingByte = mySerial.read();
    if(number_song > 0){
      master_string_1 += char(incomingByte);
    }else{
      say_string += char(incomingByte);
    }
  }
  if(char(incomingByte) == ';' || analogRead(A2) == 0){
    if(number_song == 1){
      master_string = master_string_1;
    } else if(number_song == 2){
      master_string = master_string_2;
    } else if(number_song == 3){
      master_string = master_string_3;
    }
    if(number_song != 0){
      prepare_song();
      play_song();
      incomingByte = '-';
      master_string = "";
    }else{
      byte display_table[] = {CH_A, CH_B, CH_C, CH_D}; 
      mySerial.println(say_string);
      text_to_voice(voice, say_string.substring(2), char(say_string[0]) == '1', char(say_string[1]) == '1');
      say_string = "";
    }
  }
  
  if(analogRead(A3) == 0){
    number_song++;
    if(number_song > 3){
      number_song = 3;
    }
    delay(100);
  }
}
